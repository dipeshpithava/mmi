{"ast":null,"code":"// Need to use the React-specific entry point to import createApi\nimport { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n// Define a service using a base URL and expected endpoints\nexport const pokemonApi = createApi({\n  reducerPath: \"pokemonApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"https://pokeapi.co/api/v2/\"\n  }),\n  endpoints: builder => ({\n    getPokemonByName: builder.query({\n      query: name => `pokemon/${name}`\n    })\n  })\n}); // Export hooks for usage in functional components, which are\n// auto-generated based on the defined endpoints\n\nexport const {\n  useGetPokemonByNameQuery\n} = pokemonApi;","map":{"version":3,"sources":["/Users/apple/Desktop/MMI/MMIBOX/src/redux/services/pokemon.ts"],"names":["createApi","fetchBaseQuery","pokemonApi","reducerPath","baseQuery","baseUrl","endpoints","builder","getPokemonByName","query","name","useGetPokemonByNameQuery"],"mappings":"AAAA;AACA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AAGA;AACA,OAAO,MAAMC,UAAU,GAAGF,SAAS,CAAC;AAClCG,EAAAA,WAAW,EAAE,YADqB;AAElCC,EAAAA,SAAS,EAAEH,cAAc,CAAC;AAAEI,IAAAA,OAAO,EAAE;AAAX,GAAD,CAFS;AAGlCC,EAAAA,SAAS,EAAGC,OAAD,KAAc;AACvBC,IAAAA,gBAAgB,EAAED,OAAO,CAACE,KAAR,CAA+B;AAC/CA,MAAAA,KAAK,EAAGC,IAAD,IAAW,WAAUA,IAAK;AADc,KAA/B;AADK,GAAd;AAHuB,CAAD,CAA5B,C,CAUP;AACA;;AACA,OAAO,MAAM;AAAEC,EAAAA;AAAF,IAA+BT,UAArC","sourcesContent":["// Need to use the React-specific entry point to import createApi\nimport { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nimport { Pokemon } from \"./types\";\n\n// Define a service using a base URL and expected endpoints\nexport const pokemonApi = createApi({\n  reducerPath: \"pokemonApi\",\n  baseQuery: fetchBaseQuery({ baseUrl: \"https://pokeapi.co/api/v2/\" }),\n  endpoints: (builder) => ({\n    getPokemonByName: builder.query<Pokemon, string>({\n      query: (name) => `pokemon/${name}`,\n    }),\n  }),\n});\n\n// Export hooks for usage in functional components, which are\n// auto-generated based on the defined endpoints\nexport const { useGetPokemonByNameQuery } = pokemonApi;\n"]},"metadata":{},"sourceType":"module"}